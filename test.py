import numpy as np
import matplotlib.pyplot as plt

# Map size and example data (replace with your map input)
x, y = 32, 32

# Example random edge weights for demonstration
horizontal_edges = np.random.rand(x, y-1)  # edges (i,j) → (i,j+1)
vertical_edges = np.random.rand(x-1, y)    # edges (i,j) → (i+1,j)

# Your map input as a string ('.' = free, '@' and 'T' = obstacle)
map_str = """
..........@......@...@.@........
@...@.@@...........@.@...@......
..............@........@@...@...
.....@.@..........@..........@..
.@@...........@@.@......@..@....
......@..@.@..@@......@....@..@@
......@..@@........@.......@...@
.@...@...............@@...@..@..
......@.........@.......@.@.....
..@.@............@.@.......@@...
@.@.........@.@.......@...@.....
............@.....@.@.@.......@.
..@.....@.@.@@.@..........@.....
.@................@.@.....@...@.
...@@@.......@.........@........
........@....@.@.@..@...........
..@...@........@....@..@@@....@.
.@......@@@..@.@..@.@..@@....@T@
@.........@........@..@......@@@
......@...@..@..@.@...@...@.....
.@.@........@.........@@.@...@..
.......@.@........@..@@@..@@@...
..@.@..@....@......@..........@.
.......@.....@....@...@.@.@@....
.................@...@.@..@.@...
................@........@..@..@
.@......@.@.........@@.........@
..@..@..@.......................
@..@@......@...@...@.........@@@
@....@....@....@.@.@...@......@@
@@.@..@@.@.@@.....@........@....
@@.............@..@.........@...
"""

edges_200 = {
2 :{ 3:1,34:1,1:1},
3 :{ 4:1,35:1,2:1},
4 :{ 5:1,3:1},
5 :{ 6:1,37:1,4:1},
6 :{ 7:1,5:1},
7 :{ 8:2,6:2},
8 :{ 9:2,40:2,7:2},
9 :{ 41:1,8:1},
11 :{ 12:1,43:1},
12 :{ 13:1,44:1,11:1},
13 :{ 14:1,45:1,12:1},
14 :{ 15:1,46:1,13:1},
15 :{ 16:1,47:1,14:1},
16 :{ 48:1,15:1},
18 :{ 19:1,50:1},
19 :{ 20:1,18:1},
20 :{ 52:1,19:1},
22 :{ 54:1},
24 :{ 25:1,56:1},
25 :{ 26:1,24:1},
26 :{ 27:1,58:1,25:1},
27 :{ 28:2,59:1,26:1},
28 :{ 29:1,60:1,27:1},
29 :{ 30:1,61:1,28:1},
30 :{ 31:1,62:1,29:1},
31 :{ 63:1,30:1},
33 :{ 1:1,34:1,65:1},
34 :{ 2:1,35:1,66:1,33:1},
35 :{ 3:1,67:2,34:2},
37 :{ 5:1,69:2},
40 :{ 8:1,41:3,72:1},
41 :{ 9:1,42:1,73:1,40:1},
42 :{ 43:1,74:1,41:1},
43 :{ 11:1,44:1,75:1,42:1},
44 :{ 12:1,45:2,76:1,43:1},
45 :{ 13:1,46:1,77:1,44:1},
46 :{ 14:1,47:4,45:1},
47 :{ 15:1,48:1,79:1,46:1},
48 :{ 16:1,49:1,80:1,47:1},
49 :{ 50:1,81:1,48:1},
50 :{ 18:1,82:1,49:1},
52 :{ 20:1,84:1},
54 :{ 22:1,55:1,86:1},
55 :{ 56:1,54:2},
56 :{ 24:1,55:1},
58 :{ 26:1,59:2,90:1},
59 :{ 27:1,60:1,91:1,58:1},
60 :{ 28:1,61:1,59:1},
61 :{ 29:2,62:2,93:2,60:2},
62 :{ 30:2,63:2,94:2,61:1},
63 :{ 31:1,64:1,95:1,62:1},
64 :{ 65:1,96:1,63:1},
65 :{ 33:1,66:1,97:1,64:1},
66 :{ 34:1,67:1,98:1,65:1},
67 :{ 35:1,68:2,99:1,66:1},
68 :{ 69:1,100:1,67:2},
69 :{ 37:1,70:3,68:3},
70 :{ 71:3,102:3,69:1},
71 :{ 72:2,70:2},
72 :{ 40:1,73:1,104:1,71:1},
73 :{ 41:1,74:1,105:2,72:1},
74 :{ 42:1,75:1,106:1,73:1},
75 :{ 43:1,76:1,107:1,74:3},
76 :{ 44:1,77:1,108:1,75:1},
77 :{ 45:1,109:1,76:2},
79 :{ 47:2,80:1,111:1},
80 :{ 48:1,81:1,112:1,79:1},
81 :{ 49:1,82:1,113:1,80:1},
82 :{ 50:1,83:1,81:2},
83 :{ 84:1,115:1,82:1},
84 :{ 52:1,85:1,116:1,83:1},
85 :{ 86:1,117:1,84:1},
86 :{ 54:1,118:1,85:1},
89 :{ 90:1,121:1},
90 :{ 58:1,91:1,122:1,89:1},
91 :{ 59:1,123:1,90:1},
93 :{ 61:1,94:1},
94 :{ 62:1,95:1,126:1,93:1},
95 :{ 63:1,96:1,127:1,94:1},
96 :{ 64:1,97:1,128:1,95:1},
97 :{ 65:1,98:1,96:1},
98 :{ 66:1,99:1,97:1},
99 :{ 67:2,100:2,131:2,98:2},
100 :{ 68:1,132:1,99:1},
102 :{ 70:1,134:1},
104 :{ 72:1,105:2,136:1},
105 :{ 73:1,106:1,137:1,104:1},
106 :{ 74:1,107:1,138:1,105:1},
107 :{ 75:1,108:1,139:1,106:1},
108 :{ 76:1,109:1,140:1,107:1},
109 :{ 77:1,110:1,141:1,108:1},
110 :{ 111:1,109:1},
111 :{ 79:1,112:1,110:1},
112 :{ 80:1,113:1,144:1,111:1},
113 :{ 81:1,112:1},
115 :{ 83:1,116:1,147:2},
116 :{ 84:1,117:1,148:1,115:2},
117 :{ 85:1,118:1,149:1,116:1},
118 :{ 86:1,119:1,150:1,117:1},
119 :{ 120:1,151:1,118:1},
120 :{ 121:1,119:1},
121 :{ 89:1,122:1,153:1,120:1},
122 :{ 90:1,123:1,154:1,121:2},
123 :{ 91:1,124:1,122:1},
124 :{ 156:1,123:1},
126 :{ 94:1,127:1,158:1},
127 :{ 95:1,128:1,159:1,126:1},
128 :{ 96:1,160:1,127:1},
131 :{ 99:1,132:1,163:1},
132 :{ 100:1,133:1,164:1,131:1},
133 :{ 134:1,165:1,132:1},
134 :{ 102:2,135:1,133:1},
135 :{ 136:1,167:1,134:1},
136 :{ 104:1,137:1,168:1,135:1},
137 :{ 105:1,138:2,136:1},
138 :{ 106:1,139:1,170:1,137:3},
139 :{ 107:1,140:1,138:1},
140 :{ 108:1,141:1,172:1,139:1},
141 :{ 109:1,173:1,140:1},
144 :{ 112:1,176:1},
146 :{ 147:1,178:1},
147 :{ 115:1,148:1,179:1,146:1},
148 :{ 116:1,149:1,180:1,147:1},
149 :{ 117:1,150:1,181:1,148:1},
150 :{ 118:1,151:1,149:1},
151 :{ 119:1,183:1,150:2},
153 :{ 121:1,154:1,185:1},
154 :{ 122:1,186:1,153:1},
156 :{ 124:1,157:1,188:1},
157 :{ 158:1,189:1,156:1},
158 :{ 126:1,159:1,157:1},
159 :{ 127:1,160:1,158:1},
160 :{ 128:1,161:1,192:1,159:1},
161 :{ 162:1,193:2,160:1},
162 :{ 163:1,194:1,161:1},
163 :{ 131:1,164:1,195:1,162:1},
164 :{ 132:1,165:1,196:1,163:1},
165 :{ 133:1,197:1,164:1},
167 :{ 135:1,168:1,199:1},
168 :{ 136:1,200:1,167:1},
170 :{ 138:1},
172 :{ 140:1,173:1,204:1},
173 :{ 141:1,205:1,172:1},
176 :{ 144:1,177:1,208:1},
177 :{ 178:1,209:1,176:1},
178 :{ 146:1,179:1,210:1,177:1},
179 :{ 147:1,180:1,178:1},
180 :{ 148:1,181:1,212:1,179:1},
181 :{ 149:1,213:1,180:1},
183 :{ 151:1,184:4,215:4},
184 :{ 185:1,216:1,183:1},
185 :{ 153:2,186:2,217:1,184:1},
186 :{ 154:1,218:1,185:1},
188 :{ 156:1,189:1,220:1},
189 :{ 157:1,221:1,188:1},
192 :{ 160:1,193:1,224:1},
193 :{ 161:1,194:1,192:1},
194 :{ 162:1,195:1,226:1,193:1},
195 :{ 163:1,196:1,227:1,194:1},
196 :{ 164:1,197:1,228:1,195:1},
197 :{ 165:1,196:1},
199 :{ 167:1,200:1,231:1},
200 :{ 168:1,232:1,199:1},
203 :{ 204:1,235:2},
204 :{ 172:1,205:1,236:1,203:1},
205 :{ 173:1,206:1,237:1,204:1},
206 :{ 207:1,238:1,205:1},
207 :{ 208:1,239:1,206:1},
208 :{ 176:1,209:1,240:1,207:1},
209 :{ 177:1,210:2,241:1,208:1},
210 :{ 178:1,242:2,209:1},
212 :{ 180:1,213:1,244:1},
213 :{ 181:1,214:1,212:2},
214 :{ 215:1,213:1},
215 :{ 183:1,216:1,247:1,214:1},
216 :{ 184:1,217:1,248:1,215:1},
217 :{ 185:1,218:1,249:1,216:1},
218 :{ 186:1,217:1},
220 :{ 188:1,221:1,252:1},
221 :{ 189:1,222:1,220:1},
222 :{ 254:1,221:2},
224 :{ 192:2,256:2},
226 :{ 194:1,227:1,258:1},
227 :{ 195:1,228:1,259:1,226:1},
228 :{ 196:1,260:1,227:1},
230 :{ 231:1},
231 :{ 199:1,232:1,263:1,230:1},
232 :{ 200:1,233:1,264:1,231:1},
233 :{ 234:1,265:1,232:1},
234 :{ 235:1,266:1,233:1},
235 :{ 203:1,236:1,267:1,234:1},
236 :{ 204:1,237:1,268:1,235:1},
237 :{ 205:1,238:1,269:1,236:1},
238 :{ 206:1,239:1,270:1,237:1},
239 :{ 207:1,240:1,271:1,238:1},
240 :{ 208:1,241:2,239:1},
241 :{ 209:1,242:1,273:1,240:1},
242 :{ 210:1,243:1,274:2,241:2},
243 :{ 244:1,275:1,242:1},
244 :{ 212:1,276:1,243:1},
247 :{ 215:1,248:1,279:1},
248 :{ 216:1,249:1,247:1},
249 :{ 217:1,281:1,248:1},
251 :{ 252:1,283:1},
252 :{ 220:1,284:1,251:1},
254 :{ 222:1,255:1,286:1},
255 :{ 256:1,287:1,254:1},
256 :{ 224:1,257:1,288:1,255:1},
257 :{ 258:1,289:1,256:1},
258 :{ 226:1,259:1,257:1},
259 :{ 227:1,260:1,291:1,258:2},
260 :{ 228:1,261:2,259:2},
261 :{ 293:2,260:1},
263 :{ 231:1,264:1,295:1},
264 :{ 232:1,265:1,296:1,263:1},
265 :{ 233:1,266:1,297:1,264:1},
266 :{ 234:2,267:1,298:1,265:1},
267 :{ 235:1,268:1,299:1,266:1},
268 :{ 236:1,269:1,300:1,267:1},
269 :{ 237:1,270:1,301:1,268:1},
270 :{ 238:1,271:1,302:1,269:1},
271 :{ 239:1,303:1,270:1},
273 :{ 241:1,274:1},
274 :{ 242:1,275:1,306:1,273:1},
275 :{ 243:1,276:1,274:1},
276 :{ 244:1,277:2,308:2,275:1},
277 :{ 278:1,309:1,276:1},
278 :{ 279:1,310:1,277:1},
279 :{ 247:1,311:1,278:1},
281 :{ 249:1,313:2},
283 :{ 251:2,284:2},
284 :{ 252:1,285:1,283:1},
285 :{ 286:1,317:1,284:1},
286 :{ 254:1,287:1,318:1,285:1},
287 :{ 255:1,288:1,319:1,286:1},
288 :{ 256:1,289:1,287:1},
289 :{ 257:1,321:1,288:1},
291 :{ 259:1,323:1},
293 :{ 261:2,294:1,325:1},
294 :{ 295:1,326:1,293:1},
295 :{ 263:1,296:1,327:2,294:2},
296 :{ 264:1,297:1,328:1,295:1},
297 :{ 265:1,298:2,329:1,296:1},
298 :{ 266:1,299:3,330:1,297:1},
299 :{ 267:1,300:1,331:1,298:1},
300 :{ 268:1,301:1,299:1},
301 :{ 269:1,302:1,333:1,300:1},
302 :{ 270:1,303:1,301:1},
303 :{ 271:1,304:1,335:1,302:1},
304 :{ 336:1,303:1},
306 :{ 274:1,338:1},
308 :{ 276:1,309:1,340:2},
309 :{ 277:1,310:1,341:1,308:1},
310 :{ 278:1,311:1,309:1},
311 :{ 279:1,312:1,343:1,310:1},
312 :{ 313:1,344:1,311:1},
313 :{ 281:1,314:1,345:1,312:1},
314 :{ 313:1},
317 :{ 285:1,318:1,349:1},
318 :{ 286:1,319:1,350:1,317:1},
319 :{ 287:1,351:1,318:1},
321 :{ 289:1,353:1},
323 :{ 291:1,324:1,355:1},
324 :{ 325:1,356:1,323:1},
325 :{ 293:1,326:1,357:1,324:1},
326 :{ 294:1,327:1,358:1,325:1},
327 :{ 295:1,328:1,359:1,326:1},
328 :{ 296:1,329:1,360:1,327:1},
329 :{ 297:1,330:1,361:1,328:1},
330 :{ 298:1,331:1,362:1,329:1},
331 :{ 299:1,363:1,330:1},
333 :{ 301:1,365:1},
335 :{ 303:1,336:1,367:1},
336 :{ 304:1,337:1,368:1,335:1},
337 :{ 338:1,369:1,336:1},
338 :{ 306:1,339:1,337:1},
339 :{ 340:1,371:1,338:1},
340 :{ 308:1,341:2,339:2},
341 :{ 309:1,373:1,340:1},
343 :{ 311:1,344:1,375:1},
344 :{ 312:1,345:1,376:2,343:1},
345 :{ 313:1,377:1,344:2},
347 :{ 348:4,379:2},
348 :{ 349:1,380:1,347:1},
349 :{ 317:1,350:1,381:1,348:1},
350 :{ 318:1,351:1,349:1},
351 :{ 319:1,352:1,383:1,350:1},
352 :{ 353:1,384:1,351:1},
353 :{ 321:1,354:1,385:1,352:1},
354 :{ 355:1,353:1},
355 :{ 323:1,356:1,387:1,354:1},
356 :{ 324:1,357:1,388:1,355:1},
357 :{ 325:1,358:1,389:1,356:1},
358 :{ 326:1,359:1,390:1,357:1},
359 :{ 327:1,360:1,391:1,358:1},
360 :{ 328:1,361:1,359:1},
361 :{ 329:1,362:1,393:1,360:1},
362 :{ 330:1,363:2,361:1},
363 :{ 331:1,395:1,362:1},
365 :{ 333:1,366:1},
366 :{ 367:1,398:1,365:1},
367 :{ 335:1,368:1,366:1},
368 :{ 336:1,369:1,400:1,367:1},
369 :{ 337:1,401:1,368:1},
371 :{ 339:1,403:1},
373 :{ 341:1,405:1},
375 :{ 343:1,376:1,407:1},
376 :{ 344:1,377:2,408:1,375:1},
377 :{ 345:1,378:1,409:3,376:1},
378 :{ 379:1,377:2},
379 :{ 347:1,380:2,411:2,378:2},
380 :{ 348:2,381:1,412:1,379:2},
381 :{ 349:1,413:1,380:1},
383 :{ 351:1,384:1,415:1},
384 :{ 352:1,385:1,416:1,383:1},
385 :{ 353:1,384:1},
387 :{ 355:1,388:1,419:1},
388 :{ 356:1,389:2,420:1,387:1},
389 :{ 357:1,390:1,421:1,388:1},
390 :{ 358:1,391:1,422:1,389:1},
391 :{ 359:1,423:1,390:1},
393 :{ 361:1,425:1},
395 :{ 363:1,427:2},
398 :{ 366:1,430:1},
400 :{ 368:1,401:1,432:2},
401 :{ 369:1,402:1,433:1,400:1},
402 :{ 403:2,401:2},
403 :{ 371:1,404:1,435:1,402:1},
404 :{ 405:1,403:1},
405 :{ 373:1,406:2,437:2,404:2},
406 :{ 407:1,438:1,405:2},
407 :{ 375:1,408:2,439:1,406:1},
408 :{ 376:1,409:1,440:1,407:1},
409 :{ 377:1,441:1,408:1},
411 :{ 379:1,412:1,443:1},
412 :{ 380:1,413:1,444:1,411:1},
413 :{ 381:1,414:1,445:6,412:2},
414 :{ 415:1,413:1},
415 :{ 383:1,416:1,447:1,414:1},
416 :{ 384:1,448:1,415:1},
418 :{ 419:1,450:1},
419 :{ 387:1,420:1,418:1},
420 :{ 388:1,421:1,419:1},
421 :{ 389:1,422:1,420:1},
422 :{ 390:1,423:1,454:1,421:1},
423 :{ 391:1,424:1,455:1,422:1},
424 :{ 425:1,456:1,423:1},
425 :{ 393:1,426:1,457:1,424:1},
426 :{ 427:1,458:1,425:1},
427 :{ 395:1,428:1,459:2,426:2},
428 :{ 429:2,460:2,427:1},
429 :{ 430:1,428:1},
430 :{ 398:1,431:1,462:1,429:1},
431 :{ 432:1,463:1,430:1},
432 :{ 400:1,433:1,464:1,431:1},
433 :{ 401:1,465:1,432:1},
435 :{ 403:1,467:1},
437 :{ 405:1,438:1,469:1},
438 :{ 406:1,439:1,470:1,437:1},
439 :{ 407:1,440:1,438:1},
440 :{ 408:1,441:1,472:1,439:1},
441 :{ 409:1,473:1,440:1},
443 :{ 411:1,444:1,475:1},
444 :{ 412:1,445:2,476:1,443:2},
445 :{ 413:1,477:1,444:1},
447 :{ 415:1,448:2,479:2},
448 :{ 416:1,449:1,480:1,447:1},
449 :{ 450:1,481:1,448:1},
450 :{ 418:1,482:1,449:1},
454 :{ 422:1,455:1,486:1},
455 :{ 423:1,456:1,487:1,454:1},
456 :{ 424:1,457:1,455:1},
457 :{ 425:1,458:1,489:1,456:1},
458 :{ 426:1,459:1,490:1,457:1},
459 :{ 427:1,460:1,491:1,458:1},
460 :{ 428:1,492:1,459:1},
462 :{ 430:1,463:1,494:1},
463 :{ 431:1,464:2,462:1},
464 :{ 432:1,465:1,496:1,463:1},
465 :{ 433:1,466:1,464:1},
466 :{ 467:2,498:2,465:1},
467 :{ 435:2,468:2,499:2,466:2},
468 :{ 469:1,467:1},
469 :{ 437:1,470:1,501:1,468:1},
470 :{ 438:1,502:1,469:1},
472 :{ 440:1,473:1,504:1},
473 :{ 441:1,474:1,505:1,472:1},
474 :{ 475:1,506:1,473:1},
475 :{ 443:1,476:2,507:1,474:1},
476 :{ 444:1,477:1,508:1,475:1},
477 :{ 445:4,478:4,509:1,476:2},
478 :{ 479:1,510:1,477:1},
479 :{ 447:1,480:2,511:2,478:2},
480 :{ 448:1,481:1,512:1,479:1},
481 :{ 449:1,482:1,513:1,480:1},
482 :{ 450:1,483:1,481:1},
483 :{ 484:1,515:1,482:1},
484 :{ 485:1,516:1,483:1},
485 :{ 486:1,517:1,484:1},
486 :{ 454:1,487:1,485:1},
487 :{ 455:1,519:1,486:1},
489 :{ 457:1,490:1,521:1},
490 :{ 458:1,491:1,522:1,489:1},
491 :{ 459:1,492:1,523:1,490:1},
492 :{ 460:1,524:1,491:1},
494 :{ 462:1,526:1},
496 :{ 464:1,528:1},
498 :{ 466:1,499:1,530:1},
499 :{ 467:1,531:1,498:1},
501 :{ 469:1,502:1,533:1},
502 :{ 470:1,503:1,534:1,501:1},
503 :{ 504:1,502:1},
504 :{ 472:1,505:1,503:1},
505 :{ 473:1,506:1,504:1},
506 :{ 474:1,507:1,538:1,505:1},
507 :{ 475:1,508:1,539:1,506:2},
508 :{ 476:2,509:2,540:1,507:1},
509 :{ 477:1,510:1,541:2,508:1},
510 :{ 478:1,511:1,509:1},
511 :{ 479:1,512:1,543:1,510:1},
512 :{ 480:2,513:2,544:2,511:2},
513 :{ 481:1,512:1},
515 :{ 483:1,516:1,547:1},
516 :{ 484:1,517:1,548:1,515:1},
517 :{ 485:1,549:1,516:1},
519 :{ 487:1,520:1,551:2},
520 :{ 521:2,519:1},
521 :{ 489:1,522:1,520:1},
522 :{ 490:1,523:1,521:1},
523 :{ 491:1,524:1,555:1,522:2},
524 :{ 492:1,525:1,556:1,523:1},
525 :{ 526:1,524:1},
526 :{ 494:1,558:1,525:1},
528 :{ 496:1,529:1,560:1},
529 :{ 530:1,561:1,528:1},
530 :{ 498:1,531:2,529:2},
531 :{ 499:2,563:2,530:1},
533 :{ 501:1,534:1,565:1},
534 :{ 502:1,566:1,533:1},
538 :{ 506:1,539:1,570:1},
539 :{ 507:1,540:2,571:1,538:1},
540 :{ 508:1,541:1,572:1,539:1},
541 :{ 509:1,540:1},
543 :{ 511:1,544:1},
544 :{ 512:1,543:1},
546 :{ 547:1,578:1},
547 :{ 515:1,548:1,579:1,546:1},
548 :{ 516:1,549:1,580:1,547:1},
549 :{ 517:1,550:2,581:1,548:1},
550 :{ 551:1,582:1,549:1},
551 :{ 519:1,583:1,550:1},
555 :{ 523:1,556:1,587:1},
556 :{ 524:1,588:1,555:1},
558 :{ 526:1,590:2},
560 :{ 528:1,561:1,592:1},
561 :{ 529:1,593:1,560:1},
563 :{ 531:1},
565 :{ 533:1,566:1,597:1},
566 :{ 534:1,565:1},
569 :{ 570:1,601:1},
570 :{ 538:1,571:1,602:1,569:1},
571 :{ 539:1,572:1,603:1,570:1},
572 :{ 540:2,604:1,571:1},
577 :{ 578:1,609:1},
578 :{ 546:1,579:1,610:1,577:1},
579 :{ 547:1,580:1,611:1,578:1},
580 :{ 548:1,581:1,612:2,579:2},
581 :{ 549:1,582:1,613:1,580:1},
582 :{ 550:2,583:1,581:1},
583 :{ 551:1,584:1,615:1,582:4},
584 :{ 585:1,616:1,583:1},
585 :{ 617:1,584:1},
587 :{ 555:1,588:1,619:1},
588 :{ 556:1,589:1,620:1,587:1},
589 :{ 590:1,588:1},
590 :{ 558:1,591:1,622:1,589:1},
591 :{ 592:1,623:1,590:1},
592 :{ 560:1,593:1,591:1},
593 :{ 561:1,594:1,625:1,592:1},
594 :{ 593:1},
596 :{ 597:1,628:2},
597 :{ 565:1,629:1,596:1},
599 :{ 600:2,631:2},
600 :{ 601:1,632:1,599:1},
601 :{ 569:1,602:1,633:1,600:1},
602 :{ 570:1,603:1,601:2},
603 :{ 571:1,604:1,635:1,602:1},
604 :{ 572:1,636:1,603:1},
608 :{ 609:1,640:1},
609 :{ 577:1,610:1,608:1},
610 :{ 578:1,611:1,642:1,609:1},
611 :{ 579:1,612:1,610:1},
612 :{ 580:1,613:2,644:2,611:1},
613 :{ 581:1,645:1,612:1},
615 :{ 583:1,616:1,647:1},
616 :{ 584:1,617:2,648:1,615:1},
617 :{ 585:2,649:1,616:1},
619 :{ 587:1,620:1,651:1},
620 :{ 588:1,619:1},
622 :{ 590:1,623:1,654:2},
623 :{ 591:1,655:1,622:1},
625 :{ 593:1,657:1},
627 :{ 628:1,659:1},
628 :{ 596:1,629:2,660:1,627:1},
629 :{ 597:1,661:1,628:2},
631 :{ 599:2,632:1},
632 :{ 600:2,633:2,664:2,631:2},
633 :{ 601:1,632:1},
635 :{ 603:1,636:2,667:1},
636 :{ 604:1,637:1,668:1,635:1},
637 :{ 638:1,636:1},
638 :{ 639:1,670:1,637:1},
639 :{ 640:1,671:1,638:1},
640 :{ 608:1,672:1,639:1},
642 :{ 610:1,674:1},
644 :{ 612:1,645:1,676:1},
645 :{ 613:2,646:1,677:1,644:1},
646 :{ 647:1,678:1,645:1},
647 :{ 615:1,648:1,646:1},
648 :{ 616:1,649:1,680:1,647:1},
649 :{ 617:2,650:1,648:1},
650 :{ 651:1,682:1,649:1},
651 :{ 619:1,683:1,650:1},
653 :{ 654:1,685:1},
654 :{ 622:1,655:1,686:1,653:1},
655 :{ 623:1,656:1,687:1,654:1},
656 :{ 657:1,688:1,655:1},
657 :{ 625:1,658:1,689:1,656:1},
658 :{ 659:2,657:1},
659 :{ 627:1,660:1,691:1,658:1},
660 :{ 628:2,661:2,692:3,659:2},
661 :{ 629:1,660:1},
664 :{ 632:1,696:1},
666 :{ 667:1},
667 :{ 635:1,668:1,666:1},
668 :{ 636:1,667:1},
670 :{ 638:1,671:1,702:1},
671 :{ 639:1,672:1,703:1,670:1},
672 :{ 640:1,673:1,704:1,671:2},
673 :{ 674:2,705:1,672:2},
674 :{ 642:1,675:1,673:1},
675 :{ 676:1,707:1,674:1},
676 :{ 644:1,677:2,675:2},
677 :{ 645:1,678:1,709:1,676:1},
678 :{ 646:1,710:1,677:1},
680 :{ 648:1,712:1},
682 :{ 650:1,683:1,714:1},
683 :{ 651:1,684:1,715:1,682:1},
684 :{ 685:1,683:1},
685 :{ 653:1,686:1,717:1,684:1},
686 :{ 654:1,687:1,718:2,685:1},
687 :{ 655:1,688:1,719:1,686:1},
688 :{ 656:1,689:1,720:1,687:2},
689 :{ 657:1,721:1,688:1},
691 :{ 659:2,692:1},
692 :{ 660:1,724:1,691:1},
696 :{ 664:1,697:1,728:1},
697 :{ 729:1,696:1},
701 :{ 702:1,733:1},
702 :{ 670:1,703:1,701:1},
703 :{ 671:1,704:1,735:1,702:1},
704 :{ 672:2,705:1,736:1,703:1},
705 :{ 673:1,737:1,704:1},
707 :{ 675:1,739:1},
709 :{ 677:1,710:1,741:2},
710 :{ 678:1,742:1,709:1},
712 :{ 680:1,713:1,744:1},
713 :{ 714:1,745:2,712:1},
714 :{ 682:1,715:1,746:1,713:1},
715 :{ 683:1,747:1,714:1},
717 :{ 685:1,718:1},
718 :{ 686:1,719:1,750:1,717:1},
719 :{ 687:1,720:2,751:1,718:1},
720 :{ 688:1,721:2,752:1,719:1},
721 :{ 689:1,722:1,753:1,720:1},
722 :{ 721:1},
724 :{ 692:1,725:1,756:2},
725 :{ 726:2,757:2,724:1},
726 :{ 727:1,725:1},
727 :{ 728:1,759:1,726:1},
728 :{ 696:1,729:1,727:1},
729 :{ 697:1,730:1,761:1,728:1},
730 :{ 731:1,729:2},
731 :{ 732:1,730:1},
732 :{ 733:1,764:1,731:1},
733 :{ 701:1,765:1,732:1},
735 :{ 703:1,736:1,767:1},
736 :{ 704:1,737:1,768:1,735:2},
737 :{ 705:1,738:1,769:1,736:1},
738 :{ 739:1,770:1,737:1},
739 :{ 707:1,740:1,771:2,738:2},
740 :{ 741:1,772:1,739:1},
741 :{ 709:1,742:1,773:1,740:1},
742 :{ 710:1,774:1,741:1},
744 :{ 712:1,745:1,776:1},
745 :{ 713:1,746:1,777:1,744:1},
746 :{ 714:1,747:1,778:1,745:1},
747 :{ 715:1,748:1,779:1,746:1},
748 :{ 780:1,747:1},
750 :{ 718:1,751:1,782:1},
751 :{ 719:1,752:1,783:1,750:1},
752 :{ 720:1,753:1,784:1,751:1},
753 :{ 721:1,752:1},
755 :{ 756:1,787:2},
756 :{ 724:1,757:1,788:1,755:1},
757 :{ 725:1,756:1},
759 :{ 727:1},
761 :{ 729:1,793:1},
764 :{ 732:1,765:1},
765 :{ 733:1,766:1,797:1,764:1},
766 :{ 767:2,798:1,765:1},
767 :{ 735:1,768:1,799:1,766:1},
768 :{ 736:1,769:1,800:1,767:1},
769 :{ 737:1,770:1,801:1,768:1},
770 :{ 738:1,771:1,802:1,769:1},
771 :{ 739:1,772:1,803:1,770:1},
772 :{ 740:1,773:1,804:3,771:3},
773 :{ 741:1,774:1,805:1,772:1},
774 :{ 742:1,775:1,806:2,773:1},
775 :{ 776:1,807:1,774:1},
776 :{ 744:1,777:2,808:1,775:1},
777 :{ 745:1,778:1,809:1,776:2},
778 :{ 746:1,779:3,810:1,777:1},
779 :{ 747:1,780:1,811:1,778:2},
780 :{ 748:1,781:1,812:1,779:1},
781 :{ 782:1,813:1,780:2},
782 :{ 750:1,783:1,814:1,781:1},
783 :{ 751:1,784:1,815:1,782:1},
784 :{ 752:1,783:1},
786 :{ 787:1,818:2},
787 :{ 755:1,788:1,819:1,786:1},
788 :{ 756:1,820:1,787:2},
790 :{ 822:1},
792 :{ 793:1,824:1},
793 :{ 761:1,792:1},
795 :{ 827:1},
797 :{ 765:1,798:1,829:1},
798 :{ 766:1,799:1,830:1,797:2},
799 :{ 767:2,800:1,798:1},
800 :{ 768:1,801:1,832:1,799:1},
801 :{ 769:1,802:2,800:1},
802 :{ 770:1,803:1,834:1,801:1},
803 :{ 771:1,804:1,835:2,802:2},
804 :{ 772:1,805:1,836:1,803:1},
805 :{ 773:1,806:1,837:1,804:1},
806 :{ 774:1,807:1,838:1,805:1},
807 :{ 775:1,808:1,839:1,806:1},
808 :{ 776:1,809:1,807:1},
809 :{ 777:1,810:1,841:1,808:1},
810 :{ 778:1,811:1,809:1},
811 :{ 779:1,812:1,843:1,810:1},
812 :{ 780:1,813:1,844:1,811:1},
813 :{ 781:1,814:1,845:1,812:1},
814 :{ 782:1,815:1,846:1,813:1},
815 :{ 783:2,847:1,814:1},
817 :{ 818:1,849:1},
818 :{ 786:1,819:1,850:1,817:1},
819 :{ 787:2,820:2,851:1,818:3},
820 :{ 788:1,821:1,819:2},
821 :{ 822:1,820:1},
822 :{ 790:1,823:1,854:1,821:1},
823 :{ 824:1,855:1,822:2},
824 :{ 792:1,856:1,823:1},
826 :{ 827:1,858:2},
827 :{ 795:2,859:1,826:1},
829 :{ 797:1,830:1,861:2},
830 :{ 798:1,862:1,829:1},
832 :{ 800:1,864:1},
834 :{ 802:2,835:1},
835 :{ 803:1,836:1,867:1,834:1},
836 :{ 804:1,837:1,868:1,835:1},
837 :{ 805:1,838:1,836:1},
838 :{ 806:1,839:5,870:5,837:1},
839 :{ 807:1,871:1,838:1},
841 :{ 809:1,873:1},
843 :{ 811:1,844:1,875:1},
844 :{ 812:1,845:1,876:1,843:1},
845 :{ 813:1,846:1,877:1,844:1},
846 :{ 814:1,847:1,878:1,845:1},
847 :{ 815:1,848:1,879:1,846:1},
848 :{ 849:1,880:1,847:1},
849 :{ 817:1,850:1,881:1,848:1},
850 :{ 818:2,851:1,882:1,849:2},
851 :{ 819:1,883:1,850:1},
854 :{ 822:1,855:1,886:1},
855 :{ 823:1,856:2,887:1,854:1},
856 :{ 824:1,857:1,888:2,855:1},
857 :{ 858:1,889:1,856:1},
858 :{ 826:1,859:1,890:1,857:1},
859 :{ 827:1,860:1,891:1,858:1},
860 :{ 861:1,892:1,859:1},
861 :{ 829:1,862:1,893:2,860:2},
862 :{ 830:1,894:1,861:2},
864 :{ 832:2,865:2},
865 :{ 897:2,864:1},
867 :{ 835:1,868:1},
868 :{ 836:1,867:1},
870 :{ 838:1,871:1,902:10},
871 :{ 839:3,903:17,870:1},
873 :{ 841:1,874:1,905:1},
874 :{ 875:1,906:1,873:2},
875 :{ 843:1,876:1,874:1},
876 :{ 844:1,877:2,908:2,875:1},
877 :{ 845:1,878:2,909:2,876:2},
878 :{ 846:1,879:1,910:3,877:1},
879 :{ 847:1,880:2,878:1},
880 :{ 848:1,881:2,912:2,879:2},
881 :{ 849:1,882:2,913:1,880:1},
882 :{ 850:1,883:1,914:2,881:1},
883 :{ 851:1,884:1,882:1},
884 :{ 885:1,916:1,883:1},
885 :{ 886:1,917:1,884:1},
886 :{ 854:1,887:1,918:2,885:2},
887 :{ 855:1,888:1,919:1,886:1},
888 :{ 856:2,889:2,920:1,887:1},
889 :{ 857:1,890:1,921:1,888:1},
890 :{ 858:1,891:1,922:1,889:1},
891 :{ 859:1,892:2,923:2,890:1},
892 :{ 860:1,893:1,924:1,891:1},
893 :{ 861:1,894:1,892:1},
894 :{ 862:1,895:1,893:1},
895 :{ 894:1},
897 :{ 865:1,898:1,929:1},
898 :{ 930:1,897:1},
901 :{ 902:1},
902 :{ 870:1,903:1,934:1,901:1},
903 :{ 871:1,904:6,935:1,902:5},
904 :{ 905:4,936:5,903:1},
905 :{ 873:1,906:1,937:3,904:3},
906 :{ 874:1,905:1},
908 :{ 876:1,909:1,940:1},
909 :{ 877:1,910:1,941:1,908:1},
910 :{ 878:1,942:1,909:1},
912 :{ 880:1,913:1,944:1},
913 :{ 881:1,914:4,912:4},
914 :{ 882:1,946:1,913:1},
916 :{ 884:1,917:1,948:1},
917 :{ 885:1,918:1,949:1,916:1},
918 :{ 886:1,919:1,950:1,917:1},
919 :{ 887:1,920:2,918:1},
920 :{ 888:1,921:1,952:1,919:1},
921 :{ 889:1,922:1,953:1,920:1},
922 :{ 890:1,923:1,954:1,921:1},
923 :{ 891:1,924:1,955:1,922:1},
924 :{ 892:1,956:1,923:1},
929 :{ 897:1,930:1},
930 :{ 898:1,931:1,962:1,929:1},
931 :{ 932:1,930:1},
932 :{ 964:1,931:1},
934 :{ 902:7,935:7},
935 :{ 903:2,936:1,934:1},
936 :{ 904:2,937:2,968:2,935:16},
937 :{ 905:2,936:1},
939 :{ 940:1},
940 :{ 908:1,941:1,939:1},
941 :{ 909:1,942:1,973:1,940:1},
942 :{ 910:1,974:1,941:1},
944 :{ 912:2,976:1},
946 :{ 914:3},
948 :{ 916:1,949:1,980:2},
949 :{ 917:1,950:1,981:1,948:1},
950 :{ 918:1,982:1,949:1},
952 :{ 920:1,953:1,984:1},
953 :{ 921:1,954:1,985:1,952:4},
954 :{ 922:1,955:1,986:1,953:1},
955 :{ 923:1,956:1,954:1},
956 :{ 924:1,957:1,988:1,955:1},
957 :{ 989:1,956:2},
962 :{ 930:1,994:1},
964 :{ 932:1,965:1,996:5},
965 :{ 997:2,964:2},
968 :{ 936:2,1000:1},
970 :{ 1002:1},
973 :{ 941:1,974:2,1005:1},
974 :{ 942:1,975:1,1006:1,973:1},
975 :{ 976:2,974:1},
976 :{ 944:1,977:2,1008:2,975:2},
977 :{ 1009:2,976:1},
979 :{ 980:4,1011:4},
980 :{ 948:1,981:1,1012:3,979:3},
981 :{ 949:1,982:2,1013:1,980:2},
982 :{ 950:1,983:1,1014:2,981:1},
983 :{ 984:1,1015:1,982:1},
984 :{ 952:1,985:1,1016:1,983:1},
985 :{ 953:1,986:1,1017:1,984:1},
986 :{ 954:1,1018:1,985:1},
988 :{ 956:1,989:2},
989 :{ 957:2,990:1,1021:1,988:1},
990 :{ 991:1,1022:1,989:1},
991 :{ 1023:1,990:1},
994 :{ 962:1,995:1},
995 :{ 996:1,994:1},
996 :{ 964:1,997:1,995:1},
997 :{ 965:1,998:1,996:1},
998 :{ 999:1,997:1},
999 :{ 1000:1,998:1},
1000 :{ 968:1,1001:1,999:1},
1001 :{ 1002:1,1000:3},
1002 :{ 970:1,1003:1,1001:1},
1003 :{ 1004:1,1002:1},
1004 :{ 1005:1,1003:1},
1005 :{ 973:1,1006:1,1004:1},
1006 :{ 974:2,1005:1},
1008 :{ 976:2,1009:2},
1009 :{ 977:1,1008:1},
1011 :{ 979:2,1012:2},
1012 :{ 980:2,1013:2,1011:6},
1013 :{ 981:1,1014:1,1012:5},
1014 :{ 982:1,1015:1,1013:2},
1015 :{ 983:1,1016:1,1014:1},
1016 :{ 984:1,1017:1,1015:1},
1017 :{ 985:1,1018:1,1016:1},
1018 :{ 986:1,1019:1,1017:1},
1019 :{ 1018:1},
1021 :{ 989:1,1022:1},
1022 :{ 990:1,1023:1,1021:1},
1023 :{ 991:1,1022:1},
}

# Parse map to 2D array, mark obstacles
lines = [line for line in map_str.strip().split('\n')]
obstacle_map = np.zeros((x, y), dtype=bool)
for i, line in enumerate(lines):
    for j, ch in enumerate(line):
        if ch in ['@', 'T']:
            obstacle_map[i, j] = True

fig, ax = plt.subplots(figsize=(10, 10))

# Show the map background (optional)
ax.set_xlim(0, y)
ax.set_ylim(0, x)
ax.set_aspect('equal')
ax.invert_yaxis()

# Draw grid cell borders
for i in range(x):
    for j in range(y):
        rect = plt.Rectangle((j, i), 1, 1, edgecolor='lightgray', facecolor='none', linewidth=0.5)
        ax.add_patch(rect)

# Draw obstacles as black squares
for i in range(x):
    for j in range(y):
        if obstacle_map[i, j]:
            ax.add_patch(plt.Rectangle((j, i), 1, 1, color='black'))

edges = edges_200
# Normalize weights for coloring
all_weights = [w for nbrs in edges.values() for w in nbrs.values()]
max_w = max(all_weights) if all_weights else 1
min_w = min(all_weights) if all_weights else 0

# # Draw horizontal edges with heat color and bidirectional arrows
# for i in range(x):
#     for j in range(y-1):
#         id = i*x+j
#         if id not in edges.keys():
#             continue
#         for next_id in edges[id].keys():
#             diff = next_id - id
#             weight = edges[id][next_id]
#             norm_weight = (weight - min_w) / (max_w - min_w + 1e-6)
#             color = plt.cm.hot(norm_weight)
#             if diff == 1: #right
#                 # Line for edge
#                 ax.plot([j+0.1, j+0.9], [i+0.5, i+0.5], color=color, linewidth=2)
#                 ax.arrow(j+0.3, i+0.5, 0.15, 0, head_width=0.15, head_length=0.1, fc=color, ec=color, length_includes_head=True)
#             elif diff == -1:
#                 # Arrows: left arrow
#                 ax.plot([j+0.1, j+0.9], [i+0.5, i+0.5], color=color, linewidth=2)
#                 ax.arrow(j+0.7, i+0.5, -0.15, 0, head_width=0.15, head_length=0.1, fc=color, ec=color, length_includes_head=True)
#             elif diff >1:
#                 # Arrows: down
#                 ax.plot([j+0.5, j+0.5], [i+0.1, i+0.9], color=color, linewidth=2)
#                 ax.arrow(j+0.5, i+0.3, 0, 0.15, head_width=0.15, head_length=0.1, fc=color, ec=color, length_includes_head=True)
#             else:
#                 ax.plot([j+0.1, j+0.9], [i+0.5, i+0.5], color=color, linewidth=2)
#                 ax.arrow(j+0.5, i+0.7, 0, -0.15, head_width=0.15, head_length=0.1, fc=color, ec=color, length_includes_head=True)
# Draw directed edges with arrows
cols = x
for from_node, to_dict in edges.items():
    fx, fy = divmod(from_node, cols)
    for to_node, weight in to_dict.items():
        tx, ty = divmod(to_node, cols)
        dx, dy = ty - fy, tx - fx
        norm_weight = (weight - min_w) / (max_w - min_w + 1e-6)
        color = plt.cm.hot(norm_weight)

        # Center of cells
        fx_c, fy_c = fy + 0.5, fx + 0.5
        tx_c, ty_c = ty + 0.5, tx + 0.5
        arrow_dx, arrow_dy = tx_c - fx_c, ty_c - fy_c

        # Draw arrow
        ax.arrow(fx_c, fy_c, arrow_dx * 0.6, arrow_dy * 0.6,
                 head_width=0.2, head_length=0.2,
                 fc=color, ec=color, length_includes_head=True)

# Remove axis ticks and labels
ax.set_xticks([])
ax.set_yticks([])

plt.title("Grid Map with Edge Heatmap and Bidirectional Arrows")
plt.show()